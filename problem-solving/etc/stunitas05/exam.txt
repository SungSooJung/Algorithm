
ST Unitas :: Coding Test Platform
SUBMIT STATUS
ST상회 / ST Sushi Bar
* English version is provided below.

ST상회

최근 원택님은 퇴근하면 골목식당을 즐겨 본다. 방송에 출연해서 가르침을 받고 잘 나가는 음식점들이 부러웠던 원택님은 자신도 하나를 차리기로 결심한다. 주 메뉴로는 평소에 좋아하던 회를 팔기로 했다.

이후 틈틈히 요리를 공부하고 인테리어 작업까지 끝내니 어느덧 개업일이 다가왔다. ST Unitas에 소문을 나서 첫 날부터 사람들이 줄을 서는 상황에 이르렀다. 손님들께 줄을 선 순서대로 1번부터 번호표를 나눠주고 요리를 하러 들어갔다.

그런데 문제가 생겼다. 전날 칼을 갈아달라고 맡기고는 깜박하고 안 찾아온 것이다. 결국 기다리던 사람들을 돌려보내야 했다. 그렇다고 개업 날짜를 늦추지는 않고 저녁 때 다시 와달라고 부탁을 했다. 원래 기다리던 손님들은 흔쾌히 수락하고 저녁 시간에 맞춰서 돌아왔다.

여기서 다른 문제가 생기는데, 점심 때 손님들이 기다리던 순서가 저녁 때는 바뀌었다는 것이다. 점심때 기껏 일찍부터 와서 기다리던 사람들의 입장에서는 충분히 억울할 수 있는 상황이 되어버린거다. 다행히 점심 때 나눠준 번호표는 모두 가지고 있었기에 이를 바탕으로 순서를 되돌릴 수는 있었다.

한 명씩 일일이 물어볼 수도 있었지만 대신 원택님은 다른 방법을 택했다. 손님들에게 뒤를 돌아보라고 한 다음 점심 때 자신보다 앞에 있었던 사람들이 있으면 모두 알려달라고 했다. 그런데 막상 대답을 모두 듣고나니까 이걸 어떻게 할 지 막막해졌다. 지금까지 한 것처럼 이번에도 여러분이 프로그램을 만들어서 원택님을 도와주자.

입력

입력은 여러 개의 테스트 케이스로 구성되어있다. 첫 줄에는 테스트 케이스의 개수가 주어진다. 다음 줄부터 각각의 테스트 케이스가 별도의 줄에 주어진다.

테스트 케이스의 첫 줄에는 손님의 수 N(1 ≤ N ≤ 100,000)과 그들로부터 받은 답변의 수 M(0 ≤ M ≤ 1,000,000)이 주어진다. 두 번째 줄부터 한 줄에 하나씩 손님들의 증언 ai, bi(1 ≤ ai < bi ≤ N)가 주어진다. 이는 점심 때 ai번째 손님보다 bi번째 손님이 앞에 있었다는 뜻이다. 중복된 대답은 들어오지 않는다.

출력

각각의 테스트 케이스에 대해 손님들이 받은 번호표의 순서를 복원해서 출력한다. 만약 손님들의 답에 모순이 있어서 복원이 불가능할 경우 -1을 출력한다.

테스트 케이스마다 별도의 줄에 정답을 출력해야 한다.

입출력 예시 설명

첫 번째 테스트 케이스

맨 처음 손님은 점심 때 3이 적힌 번호표를 받았다. 이 손님보다 번호가 빠른 손님은 1이 적힌 번호표를 받은 두 번째 손님과 2가 적힌 번호표를 받은 다섯 번째 손님이다. 두 번째 손님의 경우 자신의 뒤에 있는 모든 사람들보다 빠른 번호를 받았기 때문에 아무 대답도 하지 않았다. 세 번째 손님은 5번으로 가장 뒷 번호를 받았기 때문에 나머지 두 손님을 모두 지목했다. 네 번째 손님도 마지막 손님보다 번호가 느리므로 지목했다.

두 번째 테스트 케이스

대답에 따르면 두 번째 손님은 다섯 번째 손님보다 늦게 번호표를 받았다. 만약 네 번째 손님이 다섯 번째 손님보다 빨리 번호표를 받았다면 두 번째 손님보다도 빠르다. 그렇지만 두 번째 손님은 네 번째 손님을 지목하지 않았으므로 이 경우는 불가능하다는 것을 알 수 있다. 따라서 네 번째 손님은 다섯 번째 손님보다 늦게 번호표를 받았어야 한다. 그런데 이 경우는 네 번째 손님의 지목이 있어야하는데 없다. 결국 손님들의 대답에 모순이 생긴 것이다.

ST Sushi Bar

Wontaek enjoys watching Alley Kitchen these days. Seeing others becoming famous in the TV show, he decided to open his one with the main dish being sushi.

Wontaek having studied cooking hard, there came the opening day. So many people from ST Unitas visited his sushi bar to see their friend that he had to assign them number tickets.

When he went into the kitchen, he found out that he forgot to bring the knife back after sharpening it at home. Consequently, he sent back the customers and told them to come to dinner.

Although he now had his knife, he encountered another problem. The visitor's waiting order got different from it was at lunch. Isn't it unfair to those who had been standing early? The good thing is that they kept their tickets so that Wontaek could recover the order.

It is possible to ask each person, but Wontaek chose a different way. He told them to turn around and check who was in front of him/her before. He collected all the information, so it's your turn to write a program that recovers the customer's order at lunch.

Input

Input consists of several test cases. The number of test cases is provided at the first line. Following lines are given each test case.

Each test case begins with the number of customers N (1 ≤ N ≤ 100,000) and their answers M (0 ≤ M ≤ 1,000,000). Then from the second line provided the customers' answers ai, bi(1 ≤ ai < bi ≤ N), which implies that aith customer was behind bi'th one.

Output

For each test case, print the reconstructed order in which the customers received their ticket. If there is a contradiction and it is impossible to do so, print -1.

Answers should be on different lines for each test case.

Explanation for Samples

First Test Case

The first customer received third ticket. The second one and the fifth one respectively got first and second ticket. Since the second customer has number one, he didn't answer anything. The third customer pointed the other two since she has the largest number. Finally, the fourth pointed the fifth.

Second Test Case

Based on the answers, the second customer received larger number than the fifth one. Now if the fourth came earlier than the fifth, he should had than the second as well, but it cannot be the case since the second did not pointed him. If the fourth customer received the number larger than the fifth one's, the fourth should have nominated him, which also is not the case. Therefore there is a contradiction in the customer's answers.

예제 입력1
2
5 5
1 2
1 5
3 4
3 5
4 5
5 6
1 2
1 3
1 5
2 5
3 4
3 5
예제 출력1
3 1 5 4 2
-1