
정수 배열과 타겟 숫자가 주어지면, 합이 타겟값이 되는 두 원소의 인덱스를 찾으시오.
단, 시간복잡도 O(n) 여야 합니다.

예제)
Input: [2, 5, 6, 1, 10], 타겟 8
Output: [0, 2] // 배열[0] + 배열[2] = 8

input = 12322


def answer(arr, start, end):
    if start >= end:
        return 1

    if (arr[start] == arr[end]):
        return answer(arr, start+1, end-1)
    else:
        return 0


def solution2(num):
    divide = 1
    arr = []
    while (True):
        if int(num/divide) == 0:
            break

        rs = int(num/mod)
        divide = mod*10
        arr.append(rs % 10)

    # 1 = palindrome
    # 0 = Not Palindrome
    print(answer(arr, 0, len(arr)-1))


solution2(input)


def palindrome(str, start, end):
    if start >= end:
        return 1
    if (str[start] == str[end]):
        return solution(str, start+1, end-1)
    else:
        return 0


# print(rs)


#        print("숫자 :", num, " 나눌값 :", mod)
#       print("나머지 : ", int(num % mod))
#      print("몫 :", rs)
